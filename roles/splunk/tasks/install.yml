- name: Checking if splunk is install
  tags: install
  stat: path="{{ SPLUNK_HOME }}/bin"
  register: splunk_path

- name: is Splunk installed?
  tags: install
  debug: msg='splunk is already installed under /opt/splunk/bin'
  when: splunk_path.stat.exists

- name: unpack splunk.tar.gz
  unarchive:
    src: "{{ SPLUNK_BINARY }}"
    # dest is $SPLUNK_HOME/.., as the tarball contains splunk/ directory
    dest: "{{ SPLUNK_HOME }}/.."
  become: true
  become_user: "{{ SPLUNK_USER }}"
  when: splunk_path.stat.exists == false

  # This playbook sets up basic splunk security
- name: change default password
  copy:
    src: "opt/splunk/etc/system/local/user-seed.conf"
    dest: "{{ SPLUNK_LOCAL }}"
    remote_src: no
  become: true
  become_user: "{{ SPLUNK_USER }}"

- name: start splunk and accept license
  command: "{{ SPLUNK_HOME }}/bin/splunk start --answer-yes --no-prompt --accept-license"
  args:
    creates: "{{ SPLUNK_HOME }}/etc/splunk-launch.conf"
  become: true
  become_user: "{{ SPLUNK_USER }}"
  when: splunk_path.stat.exists == false

- name: Update pass4symmkey
  lineinfile:
    path: /opt/splunk/etc/system/local/server.conf
    regexp: ^pass4SymmKey\s=\s.+
    line: pass4SymmKey = 1sDaB0mbyo
  ignore_errors: yes
  become: true
  become_user: "{{ SPLUNK_USER }}"

- name: restart Splunk
  command: "{{ SPLUNK_HOME }}/bin/splunk restart"
  become: true
  become_user: "{{ SPLUNK_USER }}"

- name: Set node as license slave
  command: "{{ SPLUNK_HOME }}/bin/splunk edit licenser-localslave -master_uri '{{ SPLUNK_LM_URI }}' -auth 'admin:{{ splunk_password }}'"
  register: lic_slave
  until: lic_slave.rc == 0
  retries: 5
  delay: 3
  notify:
    - restart splunk
  ignore_errors: yes
  become: true
  become_user: "{{ SPLUNK_USER }}"
