# INFO: Verify captain via a splunk search
- name: Get Server Classes
  action: shell /opt/splunk/bin/splunk search '| rest /services/deployment/server/clients splunk_server="usmtnecdsplsd01" | rename splunk_server as deployment_server | eval sourceHost = if( isnull(sourceDomain), hostname, sourceHost ) | eval sourceHost = upper(sourceHost) | rex field=utsname "(?<os>[^\-]+)\-(?<arch>.+)" | eval os = case( os = "linux", "Linux", os = "windows", "Windows" ) | fields - utsname hostname | rename sourceHost as hostname | fields serverClasses*stateOnClient | rename serverClasses.*.stateOnClient as * | stats count(*) as * values(*) as *.val | transpose | rename column as "Server Classes" "row 1" as "count" | search "Server Classes"!=*.val' -auth admin:"{{ splunk_new_password }}"
  register: search_output
- debug: var=search_output.stdout_lines

## Reload the deploy server
#- name: reload deploy server
#  shell: /opt/splunk/bin/splunk reload deploy-server -class {{serverclass}} -auth admin:"{{ splunk_new_password }}"
#  register: reload_status
#- debug: var=reload_status.stdout
#  become: true
#  become_user: "{{ SPLUNK_USER }}"
#
#---
#- hosts: usmtnecdsplsd01
#  serial: 1
#  name: get serverclass names
#  become: true
#  become_user: splunk
#  tasks:
#  - block:
#        - include: tasks/collect_server_class_names.yml
#
- name: target required serverClass and reload deploy server
  vars_prompt:
    - name: ServerClass
      prompt: Enter the required server class
      private: false
  pre_tasks:
    - name: "set_vars"
      set_fact: ServerClass={{ ServerClass }}
  tasks:
  - name: reload deploy server
    shell: /opt/splunk/bin/splunk reload deploy-server -class "{{ ServerClass }}" -auth admin:"{{ splunk_new_password }}"
    register: reload_status
  - debug: var=reload_status.stdout